{"version":3,"sources":["components/square/styledSquare.js","components/square/Square.jsx","components/hooks/useRenderCount.js","components/field/styledField.js","components/field/Field.jsx","components/Game/Game.jsx","App.js","reportWebVitals.js","index.js"],"names":["Sq","styled","div","isFirst","P","p","Square","React","memo","value","hand","countRef","useRef","console","log","current","useRenderCount","onClick","WrapperField","WrapperSq","hide","ModalWindow","isOpenModal","H3Modal","h3","StartAgain","TextInsideButton","FixedTheMove","Restart","MoveBack","AddOptionsl","Field","useState","Array","fill","map","board","setBoard","isWinner","index","finishGame","startGame","history","optionsGame","setOprionsGame","useEffect","str","setState","obj","array","includes","checkWinner","join","TryAgain","pop","_board","slice","el1","index1","el2","index2","_onClick","Game","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77520272.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\n\r\nexport const Sq = styled.div`\r\nwidth: 35px;\r\nheight: 20px;\r\nborder: 1px solid #4a4747;\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\nbackground-color: ${({isFirst}) => isFirst === \"X\" ? \"#19b811\" : isFirst === \"O\" ? \"#c9d91a\" : \"\"};\r\ncursor: pointer;\r\n-webkit-transition:background-color 1s;\r\n&:hover{\r\n   background-color: grey;\r\n}\r\n`\r\nexport const P = styled.p`\r\nfont-size: 20px;\r\n`","import React, { useState } from \"react\";\r\nimport {Sq, P} from \"./styledSquare\"\r\nimport {useRenderCount} from \"../hooks/useRenderCount\"\r\n\r\nconst Square  = React.memo(\r\n   ({value, hand, isFirst}) =>{\r\n      useRenderCount()\r\n      \r\n         return(\r\n            <>\r\n         <Sq onClick={hand} isFirst={isFirst} ><P>{value}</P></Sq>\r\n            </>\r\n         )\r\n      }\r\n      \r\n) \r\nexport default Square","import {useRef} from 'react'\r\n\r\nexport const useRenderCount = () =>{\r\n   const countRef = useRef(0)\r\n   console.log('render count', countRef.current++);\r\n   \r\n}","import styled from \"styled-components\";\r\n\r\n\r\nexport const WrapperField = styled.div`\r\n\r\npadding-top: 10px;\r\nwidth: 1900px;\r\nmargin: 0 auto;\r\njustify-content: center;\r\ndisplay: flex;\r\nflex-wrap: wrap;\r\n`\r\n\r\nexport const WrapperSq = styled.div`\r\ndisplay: ${({hide})=>hide ? \"none\" : \"flex\"};\r\n`\r\n\r\nexport const ModalWindow = styled.div`\r\ncursor: pointer;\r\n visibility: ${({isOpenModal})=> isOpenModal ? \"visible\" : 'hidden'};\r\nposition: fixed;\r\ndisplay: flex;\r\nflex-direction:column;\r\njustify-content: center;\r\nalign-items: center;\r\ntop: ${({isOpenModal})=> isOpenModal ? \"50%\" : '-50%'};\r\nleft:50%;\r\ntransform: translate(-50%, -50%);\r\nbackground-color:#ced3db;\r\nz-index: 1;\r\nheight: 30%;\r\nwidth: 30%;\r\ntransition: all 0.7s ease-in-out;\r\n`\r\n\r\nexport const H3Modal = styled.h3`\r\ntext-align: center;\r\n`\r\n\r\nexport const StartAgain = styled.div`\r\nborder: 2px solid #900020;\r\nwidth: 200px;\r\nheight: 50px;\r\n`\r\nexport const TextInsideButton  = styled.p`\r\ntext-align: center;\r\nfont-weight: bold;\r\n`;\r\n\r\n\r\nexport const FixedTheMove = styled.div`\r\nposition: fixed;\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\nleft: 50%;\r\ntop:2%;\r\ntransform: translate(-50%, -50%);\r\nborder: 2px solid red;\r\nbackground-color: black;\r\nwidth: 300px;\r\nheight: 70px;\r\n`\r\n\r\nexport const P = styled.p`\r\ncolor: white;\r\nfont-size: 18px;\r\n`\r\n\r\nexport const Restart = styled.div`\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\nwidth: 200px;\r\nheight: 50px;\r\nborder: 2px solid #19b811;\r\nborder-radius: 5px;\r\ncursor: pointer;\r\n`\r\n\r\nexport const MoveBack = styled(Restart)`\r\nborder: 2px solid #c9d91a;\r\n\r\n`\r\nexport const AddOptionsl = styled.div`\r\ndisplay: flex;\r\njustify-content: space-around;\r\n`","import React, { useState, memo, useCallback, useEffect } from \"react\";\r\nimport Square from \"../square/Square\"\r\nimport {WrapperField, \r\n   WrapperSq,\r\n    ModalWindow, \r\n    H3Modal, \r\n    StartAgain, \r\n    TextInsideButton, \r\n    FixedTheMove, \r\n    Restart,\r\n    P,\r\n    AddOptionsl,\r\n    MoveBack,\r\n   } from \"./styledField\"\r\n\r\nconst Field = () =>{\r\n   // инициализируем State\r\n   const [board, setBoard] = useState(\r\n   new Array(52).fill().map(() => new Array(50).fill(\"\"))\r\n );\r\n const [optionsGame, setOprionsGame] = useState({\r\n    isWinner: \"\",\r\n    isFirst: true,\r\n    index: 0,\r\n    finishGame: false,\r\n    startGame: false,\r\n    history: [],\r\n })\r\n\r\nconst _onClick=  (index1, index2)=>{\r\n   const _board = board.slice()\r\n\r\n   if(_board[index1][index2-1]  || \r\n      _board[index1][index2 + 1] ||\r\n      _board[index1+1][index2]   ||       // Проверяем соответствует ли слде. ход установленным правилам\r\n      _board[index1 -1][index2]  ||\r\n      !optionsGame.startGame ){\r\n\r\n         if(!_board[index1][index2]){\r\n         _board[index1][index2] = optionsGame.isFirst ? \"X\" : \"O\"\r\n         setBoard(_board)\r\n         setOprionsGame({\r\n            ...optionsGame,\r\n            isFirst: !optionsGame.isFirst,    // Если проверка прошла обновляем State\r\n            index: index1,\r\n            startGame: true,\r\n            history: [...optionsGame.history, [index1, index2]]\r\n         })\r\n   }\r\n   }\r\n}\r\n\r\nconst FuncMoveBack = () =>{\r\n   const history = optionsGame.history.pop()\r\n   const _board = board.slice()\r\n   _board[history[0]][history[1]] = \"\"\r\n   setBoard(_board)                                    // Вщзращаем ходы обратно\r\n   setOprionsGame({\r\n      ...optionsGame,\r\n      startGame: !optionsGame.startGame,\r\n      isFirst: !optionsGame.isFirst,\r\n   })\r\n}\r\n\r\nuseEffect(()=>{\r\n   if(optionsGame.startGame){\r\n      if(\r\n         checkWinner(board[optionsGame.index].join(\"\"), setOprionsGame, optionsGame, board) // Следим за  игрой если есть победитель обновляем State\r\n          ){ \r\n        setOprionsGame({\r\n           ...optionsGame,\r\n           finishGame: true,            \r\n        })\r\n      }\r\n   }\r\n   \r\n \r\n}, [optionsGame.index])\r\n\r\n\r\nconst  TryAgain = ()=>{             \r\n   setBoard( new Array(52).fill().map(() => new Array(50).fill(\"\")) ) // Обнуляем State \r\n  setOprionsGame({\r\n     ...optionsGame,\r\n     finishGame: false,\r\n     startGame: false,\r\n     isFirst: true,\r\n  })\r\n}\r\n\r\n   return(\r\n      <>\r\n      <AddOptionsl>\r\n      <Restart onClick={TryAgain}><h3>RESTART</h3></Restart>\r\n      <FixedTheMove>\r\n         <P> Now is Move {optionsGame.isFirst ? \"X\" : \"O\"} </P>\r\n      </FixedTheMove>\r\n      <MoveBack onClick={FuncMoveBack}><h3>MOVE BACK</h3></MoveBack>\r\n      </AddOptionsl>\r\n \r\n      <WrapperField>\r\n         {board.map((el1, index1)=>{\r\n\r\n            return(\r\n               <WrapperSq key = {index1} hide={index1 == 0 || index1 == 51 ? 1 : 0}  >\r\n                  {el1.map((el2, index2)=>{\r\n                     return(\r\n                     <Square \r\n                        key= {index2} \r\n                        hand={()=>_onClick(index1,index2)}\r\n                        value={el1[index2]} \r\n                        isFirst={el1[index2]}\r\n                       />\r\n                     )\r\n                  })}\r\n               </WrapperSq>\r\n            )\r\n         })}\r\n         <ModalWindow isOpenModal ={optionsGame.finishGame}>\r\n         <H3Modal>Winner is player {optionsGame.isWinner}</H3Modal>\r\n            <StartAgain onClick={TryAgain}><TextInsideButton>Do you wanna try again?</TextInsideButton></StartAgain>\r\n         </ModalWindow>\r\n\r\n      </WrapperField>\r\n      </>\r\n   )\r\n}\r\n\r\nfunction checkWinner (str, setState, obj, array){\r\nif(str.includes(\"XXXXX\") || str.includes(\"OOOOO\") ){\r\n\r\nstr.includes(\"XXXXX\") ? setState(obj.isWinner = \"X\") : setState(obj.isWinner = \"O\")   // Функция для проверки победителя\r\n   return true\r\n   }\r\n}\r\n\r\n\r\nexport default Field","import React from \"react\";\r\nimport Field from \"../field/Field\"\r\n\r\nconst Game = () =>{\r\n   \r\n   \r\n   return (\r\n      <>\r\n      <Field/>\r\n      </>\r\n   ) \r\n}\r\n\r\nexport default Game","import React from \"react\"\nimport './App.css';\nimport Game from \"./components/Game/Game\"\n\nfunction App() {\n  return (\n    <>\n    <Game/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}